apiVersion: v1
data:
  DB_Password: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: null
  name: db-secret
--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv 
spec:
  volumeMode: Filesystem
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  hostPath:
   path: /mysql/mysql_data
  claimRef:
   name: mysql-pvc
   namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 3Gi
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
#  type: LoadBalancer
  clusterIP: 172.17.30.100
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      nodePort: 30300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_Password
            - name: MYSQL_DATABASE
              value: mysql
          volumeMounts:
            - name: init-db-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-volume
              mountPath: /var/lib/mysql
      initContainers:
        - name: init-mysql-db
          image: mysql:8.0
          command:
            - sh
            - -c
            - |
              echo "Running init script"
              mysqld --initialize-insecure --user=mysql
              mysqld --user=mysql &
              while ! mysqladmin ping -h "127.0.0.1" --silent; do
                echo "Waiting for primary MySQL to be available..."
                sleep 3
              done
              mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'root'; FLUSH PRIVILEGES;"
              echo "alter user localhost script finished"   
              mysql -h localhost -u root -p${MYSQL_ROOT_PASSWORD} -e "ALTER USER 'root'@'%' IDENTIFIED BY 'root'; FLUSH PRIVILEGES;"
              echo "alter user script finished"     
              mysql -u root -p${MYSQL_ROOT_PASSWORD} -P 3306 < /docker-entrypoint-initdb.d/create-table.sql
              echo "Init script finished"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_Password
          volumeMounts:
            - name: init-db-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-volume
              mountPath: /var/lib/mysql
      volumes:
        - name: init-db-scripts
          configMap:
            name: mysql-init-scripts
        - name: mysql-volume
          persistentVolumeClaim:
            claimName: mysql-pvc